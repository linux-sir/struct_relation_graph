
%{
#include <stdio.h>
extern char* yytext;
extern FILE *yyin;
extern FILE *yyout;
%}
 
 
comment_t (\/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*+\/)|(\/\/.*)
string_t [a-zA-Z0-9_\-]+
 
 
string_head struct[ \t]+.{string_t}[ \t]*[\n]?\{
string_anon_head [ \t]*struct[ \t]*[\n]?[ \t]*\{
string_element {string_t}[ \t]+[^;{]+[ \t]*\;
macro_define [ \t]*#.+\n
 
 
%s STRUCT COMMENT TAG
 
 
%%
<STRUCT>struct[ \t]+.{string_t}[ \t]*[\n]?\{([^}]|[\r\n])*\}\; {fprintf(yyout,"%s\n",yytext);}
<COMMENT>{comment_t} ;
<COMMENT>{macro_define} ;
<COMMENT>{string_anon_head} printf("------> threa are anonymous structs,please rename them !!!!!!!!!\n") ;{fprintf(yyout,"struct anonymous aaa\n");}
<COMMENT>. fprintf(yyout,"%s",yytext) ;
<COMMENT>\n fprintf(yyout,"\n") ;
<STRUCT>.  ;
<STRUCT>\n ;
<TAG>{string_head} fprintf(yyout,"TTT_HEAD:%s\n",yytext);
<TAG>{string_element} fprintf(yyout,"TTT_ELE:%s\n",yytext);
<TAG>. fprintf(yyout,"%s",yytext);
<TAG>\n  fprintf(yyout,"\n");
%%
 
 
#include <sys/types.h>
#include <stdio.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
 
 
int yywrap(){
    return 1;
}
 
int main(int argc, char *argv[])
{
int step = 0;
char file_dir[1024]={0};
char file_no_comment[1024]={0};
char file_struct[1024]={0};
char file_result[1024]={0};
 
 
int size = 1023;
 
 
if (argc != 2){
    printf("please give src file path\n");
    return 0;
}
 
 
getcwd(file_dir,size); 
 
 
strcat(file_no_comment, argv[1]);
strcat(file_no_comment, "-1.txt");
 
 
strcat(file_struct, argv[1]);
strcat(file_struct,"-2.txt");
 
 
strcat(file_result, argv[1]);
strcat(file_result,"-struct-result.txt");
 
 
printf("out file is %s\n", file_result);
 
 
yyin=fopen(argv[1],"r");
if (!yyin)
{
    printf("error file %s\n",argv[1]);
    return 0;
}
yyout=fopen(file_no_comment, "w+");
if (!yyout)
{
    printf("error out file\n");
    return 0;
}
 
 
BEGIN COMMENT;
yylex();
fclose(yyin);
fclose(yyout);
 
 
yyin=fopen(file_no_comment,"r");
if (!yyin)
{
    printf("error file %s\n",file_no_comment);
    return 0;
}
yyout=fopen(file_struct, "w+");
if (!yyout)
{
    printf("error out file\n");
    return 0;
}
BEGIN STRUCT;
yylex();
fclose(yyin);
fclose(yyout);
remove(file_no_comment);
 
 
yyin=fopen(file_struct,"r");
if (!yyin)
{
    printf("error file %s\n",file_no_comment);
    return 0;
}   
yyout=fopen(file_result, "w+");
if (!yyout)
{
    printf("error out file\n");
    return 0;
}   
BEGIN TAG;
yylex();
fclose(yyin);
fclose(yyout);
remove(file_struct);
 
return 0;
}
